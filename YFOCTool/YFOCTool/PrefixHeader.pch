//
//  PrefixHeader.pch
//  YFOCTool
//
//  Created by apple on 2020/11/17.
//

#ifndef PrefixHeader_pch
#define PrefixHeader_pch

#ifdef DEBUG
    #define DLog(fmt, ...) NSLog((@"[文件名:%s]\n" "[函数名:%s]\n" "[行号:%d] \n" fmt), __FILE__, __FUNCTION__, __LINE__, ##__VA_ARGS__);
    #define DeBugLog(fmt, ...) NSLog((@"%s [Line %d] " fmt), __PRETTY_FUNCTION__, __LINE__, ##__VA_ARGS__);
    #define NSLog(...) NSLog(__VA_ARGS__);
    #define MyNSLog(FORMAT, ...) fprintf(stderr,"[%s]:[line %d行] %s\n",[[[NSString stringWithUTF8String:__FILE__] lastPathComponent] UTF8String], __LINE__, [[NSString stringWithFormat:FORMAT, ##__VA_ARGS__] UTF8String]);
#else
    #define DLog(...)
    #define DeBugLog(...)
    #define NSLog(...)
    #define MyNSLog(FORMAT, ...)
#endif
// 屏幕尺寸
#define YF_Screen_Size [UIScreen mainScreen].bounds.size
#define YF_Screen_Height [UIScreen mainScreen].bounds.size.height
#define YF_Screen_Width [UIScreen mainScreen].bounds.size.width
//判断屏幕
// 判断 iPad
#define YF_UI_IS_IPAD (UI_USER_INTERFACE_IDIOM() == UIUserInterfaceIdiomPad)
// 判断iPhone X
#define YF_Is_iPhoneX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) : NO)
//判断iPHoneXr
#define YF_Is_iPhoneXR ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(828, 1792), [[UIScreen mainScreen] currentMode].size) && !YF_UI_IS_IPAD : NO)
//判断iPHone 11
#define YF_Is_iPhone11 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(750, 1624), [[UIScreen mainScreen] currentMode].size) && !YF_UI_IS_IPAD : NO)
//判断iPHoneXs | 11Pro
#define YF_Is_iPhoneXS ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1125, 2436), [[UIScreen mainScreen] currentMode].size) && !YF_UI_IS_IPAD : NO)
//判断iPhoneXs Max | 11ProMax
#define YF_Is_iPhoneXS_MAX ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1242, 2688), [[UIScreen mainScreen] currentMode].size) && !YF_UI_IS_IPAD : NO)
//判断iPhone12_Mini
#define YF_Is_iPhone12_Mini ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1080, 2340), [[UIScreen mainScreen] currentMode].size) && !YF_UI_IS_IPAD : NO)
//判断iPhone12 | 12Pro
#define YF_Is_iPhone12 ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1170, 2532), [[UIScreen mainScreen] currentMode].size) && !YF_UI_IS_IPAD : NO)
//判断iPhone12 Pro Max
#define YF_Is_iPhone12_ProMax ([UIScreen instancesRespondToSelector:@selector(currentMode)] ? CGSizeEqualToSize(CGSizeMake(1284, 2778), [[UIScreen mainScreen] currentMode].size) && !YF_UI_IS_IPAD : NO)
//x系列
#define YF_IS_IPhoneX_All (YF_Is_iPhoneX || YF_Is_iPhoneXR || YF_Is_iPhoneXS || YF_Is_iPhoneXS_MAX || YF_Is_iPhone11 || YF_Is_iPhone12_Mini || YF_Is_iPhone12 || YF_Is_iPhone12_ProMax)
#define YF_NavBar_Height (YF_IS_IPhoneX_All ? 88 : 64)
#define YF_OnlyNavBar_Height 44
#define YF_StatusBar_Height (YF_IS_IPhoneX_All ? 44 : 20)
#define YF_Save_Height (YF_IS_IPhoneX_All ? 34 : 0)
#define YF_Tabbar_Height (49 + YF_Save_Height)
#endif /* PrefixHeader_pch */
